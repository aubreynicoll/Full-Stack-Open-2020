{"version":3,"sources":["components/Entry.js","components/NewEntryForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Entry","person","deletePerson","name","number","type","onClick","NewEntryForm","props","addPerson","newName","handleInputNewName","newNumber","handleInputNewNumber","onSubmit","value","onChange","Filter","searchName","handleInputSearchName","Notification","message","className","baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchName","notificationMessage","setNotificationMessage","useEffect","personsService","all","entriesToShow","filter","toLowerCase","includes","event","target","preventDefault","some","setTimeout","window","confirm","find","p","updatedPerson","map","catch","error","console","log","createdPerson","concat","key","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40ac4d99.chunk.js","sourcesContent":["import React from 'react';\n\nconst Entry = ({person, deletePerson}) => {\n    return (\n        <div>\n            {person.name} {person.number}\n            <button\n              type=\"button\"\n              onClick={deletePerson}>\n              delete person\n            </button>\n\n        </div>\n    )\n}\n\nexport default Entry\n","import React from 'react';\n\nconst NewEntryForm = (props) => {\n    const { addPerson,\n            newName,\n            handleInputNewName,\n            newNumber,\n            handleInputNewNumber\n    } = props\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name: <input\n                            value={newName}\n                            onChange={handleInputNewName} />\n            </div>\n            <div>\n                number: <input\n                            value={newNumber}\n                            onChange={handleInputNewNumber} />\n            </div>\n            <div>\n                <button type='submit'>add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default NewEntryForm\n","import React from 'react';\n\nconst Filter = (props) => {\n    const { searchName,\n            handleInputSearchName\n    } = props\n\n    return (\n        <div>\n            search by name: <input\n                                value={searchName}\n                                onChange={handleInputSearchName} />\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  else {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createPerson = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst updatePerson = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, createPerson, updatePerson, deletePerson }\n","// import deps\nimport React, {useState, useEffect} from 'react';\nimport Entry from './components/Entry';\nimport NewEntryForm from './components/NewEntryForm';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport personsService from './services/persons'\n\nconst App = () => {\n    // define state\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [searchName, setSearchName] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n\n    // load DB\n    useEffect(() => {\n      personsService\n        .getAll()\n        .then(all => {\n          setPersons(all)\n        })\n    }, [])\n\n    const entriesToShow = searchName === ''\n        ? persons\n        : persons.filter((person) => person.name.toLowerCase().includes(searchName.toLowerCase()))\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (persons.some((person) => person.number === newNumber)) {\n            setNotificationMessage(`The number ${newNumber} is in use by another individual.`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 2000)\n        }\n        else if (persons.some(person => person.name === newName)) {\n          const result = window.confirm(`${newName} is already an entry. do you wish to update the entry?`)\n          \n          if (result) {       \n            const person = persons.find(p => p.name === newName)     \n            const newPerson = {...person, number: newNumber}\n            personsService\n              .updatePerson(person.id, newPerson)\n              .then(updatedPerson => {\n                setPersons(persons.map(p => p.id !== person.id ? p : updatedPerson))\n                setNotificationMessage(`${person.name}'s number was successfully updated`)\n                setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 2000)\n                setNewName('')\n                setNewNumber('')\n              })\n              .catch(error => {\n                console.log(error.response.data.error)                \n                setNotificationMessage(error.response.data.error)\n                setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 2000)                \n              })              \n          }\n        }         \n        else {\n            const newPerson = {\n              name: newName,\n              number: newNumber\n            }\n            personsService\n              .createPerson(newPerson)\n              .then(createdPerson => {\n                setPersons(persons.concat(createdPerson))\n                setNotificationMessage(`${createdPerson.name}'s number was successfully added`)\n                setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 2000)\n                setNewName('')\n                setNewNumber('')\n              })\n              .catch(error => {\n                console.log(error.response.data.error)                \n                setNotificationMessage(error.response.data.error)\n                setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 2000)  \n              })\n        }\n    }\n\n    const deletePerson = (person) => {\n      const result = window.confirm(`this will delete ${person.name}. are you sure?`)\n      if (result) {\n        personsService\n          .deletePerson(person.id)\n          .then(deletedPerson => {\n            setPersons(persons.filter(p => p.id !== person.id))\n            setNotificationMessage(`${person.name}'s number was successfully deleted`)\n                setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 2000)\n          })\n          .catch(() => {\n            setPersons(persons.filter(p => p.id !== person.id))\n            setNotificationMessage(`${person.name}'s number has been removed from the server`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 2000)\n          })\n      }\n    }\n\n    const handleInputSearchName = (event) => {\n        setSearchName(event.target.value)\n    }\n\n    const handleInputNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleInputNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    // return JSX\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMessage} />\n            <Filter\n                searchName={searchName}\n                handleInputSearchName={handleInputSearchName} />\n\n            <h2>Request for New Entry</h2>\n            <NewEntryForm\n                addPerson={addPerson}\n                newName={newName}\n                handleInputNewName={handleInputNewName}\n                newNumber={newNumber}\n                handleInputNewNumber={handleInputNewNumber} />\n\n            <h2>Numbers</h2>\n            {entriesToShow.map((person) =>\n                <Entry\n                    key={person.name}\n                    person={person}\n                    deletePerson={() => deletePerson(person)} />\n            )}\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}