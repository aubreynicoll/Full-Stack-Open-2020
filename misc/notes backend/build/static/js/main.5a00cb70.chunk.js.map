{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","footerStyle","color","fontStyle","fontSize","Footer","style","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","noteService","createdNote","concat","handleNoteChange","target","value","handleLogin","loginService","window","localStorage","setItem","JSON","stringify","setTimeout","handleLogout","removeItem","notesToShow","filter","useEffect","allNotes","loggedInUser","getItem","parse","onSubmit","type","name","onChange","map","key","find","n","alteredNote","updatedNote","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a00cb70.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n      <li className=\"note\">\n        {note.content}\n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  else {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification\n","import React from 'react'\nconst footerStyle = {\n  color: 'green',\n  fontStyle: 'italic',\n  fontSize: 16\n}\nconst Footer = () => {\n  return (\n    <div style={footerStyle}>\n      <br />\n      <p>Note app, Department of Computer Science, University of Helsinki</p>\n    </div>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken }\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, {useState, useEffect} from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes';\nimport loginService from './services/login'\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n        }\n        noteService\n          .create(noteObject)\n          .then((createdNote) => {\n            setNotes(notes.concat(createdNote))\n            setNewNote('')\n          })\n\n    }\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value)\n    }\n\n    const toggleImportance = (id) => {\n      const note = notes.find(n => n.id === id)\n      const alteredNote = {...note, important: !note.important}\n\n      noteService\n        .update(id, alteredNote)\n        .then((updatedNote) => {\n          setNotes(notes.map(n => n.id !== id ? n : updatedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNotes(notes.filter(n => n.id !== id))\n        })\n    }\n\n    const handleLogin = async (event) => {\n      event.preventDefault()\n      try {\n        const user = await loginService.login({ username, password })\n\n        window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n\n        setUser(user)\n        noteService.setToken(user.token)\n        setUsername('')\n        setPassword('')\n      }\n      catch (exception) {\n        setErrorMessage('incorrect credentials')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      }\n    }\n\n    const handleLogout = (event) => {\n      window.localStorage.removeItem('loggedInUser')\n      noteService.setToken(null)\n      setUser(null)\n    }\n\n    const loginForm = () => {\n      return (\n        <form onSubmit={handleLogin}>\n          <div>\n            username:\n            <input\n              type=\"text\"\n              value={username}\n              name=\"Username\"\n              onChange={({ target }) => setUsername(target.value)} />                \n          </div>\n          <div>\n            password:\n            <input\n              type=\"text\"\n              value={password}\n              name=\"Password\"\n              onChange={({ target }) => setPassword(target.value)} />\n          </div>\n          <button type=\"submit\">login</button>\n        </form>\n      )\n    }\n\n    const noteForm = () => {\n      return (\n        <div>\n          <p>\n            currently logged in as {user.name}\n            <button type=\"button\" onClick={handleLogout}>logout</button>\n          </p>\n          <form onSubmit={addNote}>          \n            <input\n                value={newNote}\n                onChange={handleNoteChange} />\n            <button type=\"submit\">save</button>\n          </form>\n        </div>\n      )\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter((note) => note.important)\n\n    useEffect(() => {\n      noteService\n        .getAll()\n        .then(allNotes => {\n          setNotes(allNotes)\n        })\n    }, [])\n\n    useEffect(() => {\n      const loggedInUser = window.localStorage.getItem('loggedInUser')\n\n      if (loggedInUser) {\n        const user = JSON.parse(loggedInUser)\n        setUser(user)\n        noteService.setToken(user.token)\n      }\n    }, [])\n\n    return (\n        <div>\n            <h1>Notes</h1>\n\n            <Notification\n              message={errorMessage} />\n\n              {user === null\n                ? loginForm()\n                : noteForm()\n              }\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note) =>\n                    <Note\n                      key={note.id}\n                      note={note}\n                      toggleImportance={() => toggleImportance(note.id)} />\n                )}\n            </ul> \n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}