{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","footerStyle","color","fontStyle","fontSize","Footer","style","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","allNotes","notesToShow","filter","map","key","find","n","alteredNote","updatedNote","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4MAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACI,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCO7BK,EAbM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAIL,yBAAKJ,UAAU,SACZI,ICRHC,EAAc,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAWGC,EATA,WACb,OACE,yBAAKC,MAAOL,GACV,6BACA,iG,gBCSS,EAfA,WAEb,OADgBM,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC+E5BK,EAzFH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAC1B,iBAHU,mBAEPG,EAFO,KAEEC,EAFF,OAKgBJ,oBAAS,GALzB,mBAKPK,EALO,KAKEC,EALF,OAM0BN,mBAAS,MANnC,mBAMPO,EANO,KAMOC,EANP,KAQdC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAEZ,IAEH,IAwCMC,EAAcP,EACdJ,EACAA,EAAMY,QAAO,SAACtC,GAAD,OAAUA,EAAKG,aAElC,OACI,6BACI,qCACA,kBAAC,EAAD,CACEK,QAASwB,IACX,6BACI,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BACKO,EAAYE,KAAI,SAACvC,GAAD,OACb,kBAAC,EAAD,CACEwC,IAAKxC,EAAKsB,GACVtB,KAAMA,EACNC,iBAAkB,kBAvCX,SAACqB,GACxB,IAAMtB,EAAO0B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,2BAAO3C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CgC,EACUb,EAAIqB,GACX1B,MAAK,SAAC2B,GACLjB,EAASD,EAAMa,KAAI,SAAAG,GAAC,OAAIA,EAAEpB,KAAOA,EAAKoB,EAAIE,SAE3CC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGf0C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEpB,KAAOA,SAuBArB,CAAiBD,EAAKsB,WAGxD,0BAAM0B,SA9DE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACf9C,QAASuB,EACTwB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAE/BrB,EACUgB,GACPlC,MAAK,SAACwC,GACL9B,EAASD,EAAMgC,OAAOD,IACtB5B,EAAW,SAoDP,2BACI8B,MAAO/B,EACPgC,SAjDS,SAACX,GACtBpB,EAAWoB,EAAMY,OAAOF,UAiDhB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MCrFZC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ec3aa6f9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n      <li className=\"note\">\n        {note.content}\n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  else {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n}\n\nexport default Notification\n","import React from 'react'\nconst footerStyle = {\n  color: 'green',\n  fontStyle: 'italic',\n  fontSize: 16\n}\nconst Footer = () => {\n  return (\n    <div style={footerStyle}>\n      <br />\n      <p>Note app, Department of Computer Science, University of Helsinki</p>\n    </div>\n  )\n}\n\nexport default Footer\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, {useState, useEffect} from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes';\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState(\n        'a new note...'\n    )\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n      noteService\n        .getAll()\n        .then(allNotes => {\n          setNotes(allNotes)\n        })\n    }, [])\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n        }\n        noteService\n          .create(noteObject)\n          .then((createdNote) => {\n            setNotes(notes.concat(createdNote))\n            setNewNote('')\n          })\n\n    }\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value)\n    }\n\n    const toggleImportance = (id) => {\n      const note = notes.find(n => n.id === id)\n      const alteredNote = {...note, important: !note.important}\n\n      noteService\n        .update(id, alteredNote)\n        .then((updatedNote) => {\n          setNotes(notes.map(n => n.id !== id ? n : updatedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNotes(notes.filter(n => n.id !== id))\n        })\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter((note) => note.important)\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification\n              message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note) =>\n                    <Note\n                      key={note.id}\n                      note={note}\n                      toggleImportance={() => toggleImportance(note.id)} />\n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input\n                    value={newNote}\n                    onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}